// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  seller
  customer

}

model post {
  id        String      @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    user      @relation(fields: [authorId], references: [id])
  authorId  String     @db.Uuid
  comments  comment[]
}

model comment {
  id        String      @id @default(uuid()) @db.Uuid
  content   String
  post    post    @relation(fields: [postId], references: [id])
  postId String     @db.Uuid
  user  user    @relation(fields: [userId], references: [id])
  userId String     @db.Uuid
}

model profile {
  id        String      @id @default(uuid()) @db.Uuid
  bio    String?
  user   user    @relation(fields: [userId], references: [id])
  userId String     @unique @db.Uuid
}

model user {
  id        String      @id @default(uuid()) @db.Uuid
  email   String   @unique
  username    String
  password String
  role         Role?        @default(customer)
  profile profile?
  photo String?
  refreshToken String?
  post post[]
  comment comment[]
  groups group[]  @relation("UserGroups") 
}

model group {
    id        String      @id @default(uuid()) @db.Uuid
    gname String
    users user[]  @relation("UserGroups") 

}